{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.BerryClient = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst constants_1 = require(\"../constants\");\n\nconst base_1 = require(\"../structures/base\");\n/**\n * ### Berry Client\n *\n * Client used to access the Berry Endpoints:\n *  - [Berries](https://pokeapi.co/docs/v2#berries)\n *  - [Berry Firmnesses](https://pokeapi.co/docs/v2#berry-firmnesses)\n *  - [Berry Flavors](https://pokeapi.co/docs/v2#berry-flavors)\n * ---\n * See [PokéAPI Documentation](https://pokeapi.co/docs/v2#berries-section)\n */\n\n\nclass BerryClient extends base_1.BaseClient {\n  constructor(clientOptions) {\n    super(clientOptions);\n  }\n  /**\n   * Get a Berry by it's name\n   * @param name The berry name\n   * @returns A Berry\n   */\n\n\n  getBerryByName(name) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        this.api.get(`${constants_1.Endpoints.Berry}/${name}`).then(response => resolve(response.data)).catch(error => reject(error));\n      });\n    });\n  }\n  /**\n   * Get a Berry by it's ID\n   * @param id The Berry ID\n   * @returns A Berry\n   */\n\n\n  getBerryById(id) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        this.api.get(`${constants_1.Endpoints.Berry}/${id}`).then(response => resolve(response.data)).catch(error => reject(error));\n      });\n    });\n  }\n  /**\n   * Get a Berry Firmness by it's ID\n   * @param id The Berry ID\n   * @returns Berry Firmness\n   */\n\n\n  getBerryFirmnessById(id) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        this.api.get(`${constants_1.Endpoints.BerryFirmness}/${id}`).then(response => resolve(response.data)).catch(error => reject(error));\n      });\n    });\n  }\n  /**\n   * Get a Berry Firmness by it's ID\n   * @param name The Berry name\n   * @returns Berry Firmness\n   */\n\n\n  getBerryFirmnessByName(name) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        this.api.get(`${constants_1.Endpoints.BerryFirmness}/${name}`).then(response => resolve(response.data)).catch(error => reject(error));\n      });\n    });\n  }\n  /**\n   * Flavors determine whether a Pokémon will benefit or suffer from eating a berry based on their nature.\n   * Check out [Bulbapedia](https://bulbapedia.bulbagarden.net/wiki/Flavor) for greater detail.\n   * @param id The Berry Flavor ID\n   * @returns Berry Flavor\n   */\n\n\n  getBerryFlavorById(id) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        this.api.get(`${constants_1.Endpoints.BerryFlavor}/${id}`).then(response => resolve(response.data)).catch(error => reject(error));\n      });\n    });\n  }\n  /**\n   * Flavors determine whether a Pokémon will benefit or suffer from eating a berry based on their nature.\n   * Check out [Bulbapedia](https://bulbapedia.bulbagarden.net/wiki/Flavor) for greater detail.\n   * @param name The Berry Flavor name\n   * @returns Berry Flavor\n   */\n\n\n  getBerryFlavorByName(name) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        this.api.get(`${constants_1.Endpoints.BerryFlavor}/${name}`).then(response => resolve(response.data)).catch(error => reject(error));\n      });\n    });\n  }\n  /**\n   * List Berries\n   * @param offset The first item that you will get\n   * @param limit How many berries per page\n   * @returns A list of berries\n   */\n\n\n  listBerries(offset, limit) {\n    return new Promise((resolve, reject) => {\n      this.api.get(`${constants_1.Endpoints.Berry}?offset=${offset || 0}&limit=${limit || 20}`).then(response => resolve(response.data)).catch(error => reject(error));\n    });\n  }\n  /**\n   * List Berries\n   * @param offset The first item that you will get\n   * @param limit How many berry firmnesses per page\n   * @returns A list of berry firmnesses\n   */\n\n\n  listBerryFirmnesses(offset, limit) {\n    return new Promise((resolve, reject) => {\n      this.api.get(`${constants_1.Endpoints.BerryFirmness}?offset=${offset || 0}&limit=${limit || 20}`).then(response => resolve(response.data)).catch(error => reject(error));\n    });\n  }\n  /**\n   * List Berry Flavors\n   * @param offset The first item that you will get\n   * @param limit How many Berry Flavors per page\n   * @returns A list of Berry Flavors\n   */\n\n\n  listBerryFlavors(offset, limit) {\n    return new Promise((resolve, reject) => {\n      this.api.get(`${constants_1.Endpoints.BerryFlavor}?offset=${offset || 0}&limit=${limit || 20}`).then(response => resolve(response.data)).catch(error => reject(error));\n    });\n  }\n\n}\n\nexports.BerryClient = BerryClient;","map":null,"metadata":{},"sourceType":"script"}