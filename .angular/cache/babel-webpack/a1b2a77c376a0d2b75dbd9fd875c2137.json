{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Maijuriina/PokemonApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { BerryClient } from 'pokenode-ts';\nimport { PokemonClient } from 'pokenode-ts';\nimport * as i0 from \"@angular/core\";\nexport class AppComponent {\n  constructor() {\n    this.title = 'PokemonApp';\n  }\n\n}\n\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)();\n};\n\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 2,\n  vars: 0,\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"header\");\n      i0.ɵɵtext(1, \"Pokemon App\");\n      i0.ɵɵelementEnd();\n    }\n  },\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\"]\n});\nconst api = new BerryClient({\n  cacheOptions: {\n    maxAge: 5000,\n    exclude: {\n      query: false\n    }\n  }\n}); // Enable cache with 5 seconds including requests with query parameters.\n// First call will cache the response\n// The next calls within 5 seconds will come from the cache\n\n_asyncToGenerator(function* () {\n  const api = new PokemonClient();\n  yield api.getPokemonByName('luxray').then(data => console.log(data.name)) // will output \"Luxray\"\n  .catch(error => console.error(error));\n})();","map":{"version":3,"sources":["C:/Users/Maijuriina/PokemonApp/src/app/app.component.ts"],"names":["BerryClient","PokemonClient","i0","AppComponent","constructor","title","ɵfac","AppComponent_Factory","t","ɵcmp","ɵɵdefineComponent","type","selectors","decls","vars","template","AppComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","styles","api","cacheOptions","maxAge","exclude","query","getPokemonByName","then","data","console","log","name","catch","error"],"mappings":";AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,aAAT,QAA8B,aAA9B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,MAAMC,YAAN,CAAmB;AACtBC,EAAAA,WAAW,GAAG;AACV,SAAKC,KAAL,GAAa,YAAb;AACH;;AAHqB;;AAK1BF,YAAY,CAACG,IAAb,GAAoB,SAASC,oBAAT,CAA8BC,CAA9B,EAAiC;AAAE,SAAO,KAAKA,CAAC,IAAIL,YAAV,GAAP;AAAmC,CAA1F;;AACAA,YAAY,CAACM,IAAb,GAAoB,aAAcP,EAAE,CAACQ,iBAAH,CAAqB;AAAEC,EAAAA,IAAI,EAAER,YAAR;AAAsBS,EAAAA,SAAS,EAAE,CAAC,CAAC,UAAD,CAAD,CAAjC;AAAiDC,EAAAA,KAAK,EAAE,CAAxD;AAA2DC,EAAAA,IAAI,EAAE,CAAjE;AAAoEC,EAAAA,QAAQ,EAAE,SAASC,qBAAT,CAA+BC,EAA/B,EAAmCC,GAAnC,EAAwC;AAAE,QAAID,EAAE,GAAG,CAAT,EAAY;AACnLf,MAAAA,EAAE,CAACiB,cAAH,CAAkB,CAAlB,EAAqB,QAArB;AACAjB,MAAAA,EAAE,CAACkB,MAAH,CAAU,CAAV,EAAa,aAAb;AACAlB,MAAAA,EAAE,CAACmB,YAAH;AACH;AAAE,GAJgD;AAI9CC,EAAAA,MAAM,EAAE,CAAC,iKAAD;AAJsC,CAArB,CAAlC;AAKA,MAAMC,GAAG,GAAG,IAAIvB,WAAJ,CAAgB;AAAEwB,EAAAA,YAAY,EAAE;AAAEC,IAAAA,MAAM,EAAE,IAAV;AAAgBC,IAAAA,OAAO,EAAE;AAAEC,MAAAA,KAAK,EAAE;AAAT;AAAzB;AAAhB,CAAhB,CAAZ,C,CAA4F;AAC5F;AACA;;AACA,kBAAC,aAAY;AACT,QAAMJ,GAAG,GAAG,IAAItB,aAAJ,EAAZ;AACA,QAAMsB,GAAG,CACJK,gBADC,CACgB,QADhB,EAEDC,IAFC,CAEKC,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAjB,CAFd,EAEsC;AAFtC,GAGDC,KAHC,CAGMC,KAAD,IAAWJ,OAAO,CAACI,KAAR,CAAcA,KAAd,CAHhB,CAAN;AAIH,CAND","sourcesContent":["import { BerryClient } from 'pokenode-ts';\r\nimport { PokemonClient } from 'pokenode-ts';\r\nimport * as i0 from \"@angular/core\";\r\nexport class AppComponent {\r\n    constructor() {\r\n        this.title = 'PokemonApp';\r\n    }\r\n}\r\nAppComponent.ɵfac = function AppComponent_Factory(t) { return new (t || AppComponent)(); };\r\nAppComponent.ɵcmp = /*@__PURE__*/ i0.ɵɵdefineComponent({ type: AppComponent, selectors: [[\"app-root\"]], decls: 2, vars: 0, template: function AppComponent_Template(rf, ctx) { if (rf & 1) {\r\n        i0.ɵɵelementStart(0, \"header\");\r\n        i0.ɵɵtext(1, \"Pokemon App\");\r\n        i0.ɵɵelementEnd();\r\n    } }, styles: [\"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJhcHAuY29tcG9uZW50LmNzcyJ9 */\"] });\r\nconst api = new BerryClient({ cacheOptions: { maxAge: 5000, exclude: { query: false } } }); // Enable cache with 5 seconds including requests with query parameters.\r\n// First call will cache the response\r\n// The next calls within 5 seconds will come from the cache\r\n(async () => {\r\n    const api = new PokemonClient();\r\n    await api\r\n        .getPokemonByName('luxray')\r\n        .then((data) => console.log(data.name)) // will output \"Luxray\"\r\n        .catch((error) => console.error(error));\r\n})();\r\n"]},"metadata":{},"sourceType":"module"}