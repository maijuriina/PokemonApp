{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/Maijuriina/PokemonApp/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport { BerryClient } from 'pokenode-ts';\nimport { PokemonClient } from 'pokenode-ts';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class PokemonService {\n  constructor(http) {\n    this.http = http;\n    const api = new BerryClient({\n      cacheOptions: {\n        maxAge: 5000,\n        exclude: {\n          query: false\n        }\n      }\n    }); // Enable cache with 5 seconds including requests with query parameters.\n    // First call will cache the response\n    // The next calls within 5 seconds will come from the cache\n  }\n\n  getPokemonByName() {\n    _asyncToGenerator(function* () {\n      const api = new PokemonClient();\n      yield api.getPokemonByName('luxray').then(data => console.log(data.name)) // will output \"Luxray\"\n      .catch(error => console.error(error));\n    })();\n  }\n\n}\n\nPokemonService.ɵfac = function PokemonService_Factory(t) {\n  return new (t || PokemonService)(i0.ɵɵinject(i1.HttpClient));\n};\n\nPokemonService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: PokemonService,\n  factory: PokemonService.ɵfac\n});","map":{"version":3,"sources":["C:/Users/Maijuriina/PokemonApp/src/app/service/pokemon.service.ts"],"names":["BerryClient","PokemonClient","i0","i1","PokemonService","constructor","http","api","cacheOptions","maxAge","exclude","query","getPokemonByName","then","data","console","log","name","catch","error","ɵfac","PokemonService_Factory","t","ɵɵinject","HttpClient","ɵprov","ɵɵdefineInjectable","token","factory"],"mappings":";AAAA,SAASA,WAAT,QAA4B,aAA5B;AACA,SAASC,aAAT,QAA8B,aAA9B;AACA,OAAO,KAAKC,EAAZ,MAAoB,eAApB;AACA,OAAO,KAAKC,EAAZ,MAAoB,sBAApB;AACA,OAAO,MAAMC,cAAN,CAAqB;AACxBC,EAAAA,WAAW,CAACC,IAAD,EAAO;AACd,SAAKA,IAAL,GAAYA,IAAZ;AACA,UAAMC,GAAG,GAAG,IAAIP,WAAJ,CAAgB;AAAEQ,MAAAA,YAAY,EAAE;AAAEC,QAAAA,MAAM,EAAE,IAAV;AAAgBC,QAAAA,OAAO,EAAE;AAAEC,UAAAA,KAAK,EAAE;AAAT;AAAzB;AAAhB,KAAhB,CAAZ,CAFc,CAE8E;AAC5F;AACA;AACH;;AACDC,EAAAA,gBAAgB,GAAG;AACf,sBAAC,aAAY;AACT,YAAML,GAAG,GAAG,IAAIN,aAAJ,EAAZ;AACA,YAAMM,GAAG,CACJK,gBADC,CACgB,QADhB,EAEDC,IAFC,CAEKC,IAAD,IAAUC,OAAO,CAACC,GAAR,CAAYF,IAAI,CAACG,IAAjB,CAFd,EAEsC;AAFtC,OAGDC,KAHC,CAGMC,KAAD,IAAWJ,OAAO,CAACI,KAAR,CAAcA,KAAd,CAHhB,CAAN;AAIH,KAND;AAOH;;AAfuB;;AAiB5Bf,cAAc,CAACgB,IAAf,GAAsB,SAASC,sBAAT,CAAgCC,CAAhC,EAAmC;AAAE,SAAO,KAAKA,CAAC,IAAIlB,cAAV,EAA0BF,EAAE,CAACqB,QAAH,CAAYpB,EAAE,CAACqB,UAAf,CAA1B,CAAP;AAA+D,CAA1H;;AACApB,cAAc,CAACqB,KAAf,GAAuB,aAAcvB,EAAE,CAACwB,kBAAH,CAAsB;AAAEC,EAAAA,KAAK,EAAEvB,cAAT;AAAyBwB,EAAAA,OAAO,EAAExB,cAAc,CAACgB;AAAjD,CAAtB,CAArC","sourcesContent":["import { BerryClient } from 'pokenode-ts';\r\nimport { PokemonClient } from 'pokenode-ts';\r\nimport * as i0 from \"@angular/core\";\r\nimport * as i1 from \"@angular/common/http\";\r\nexport class PokemonService {\r\n    constructor(http) {\r\n        this.http = http;\r\n        const api = new BerryClient({ cacheOptions: { maxAge: 5000, exclude: { query: false } } }); // Enable cache with 5 seconds including requests with query parameters.\r\n        // First call will cache the response\r\n        // The next calls within 5 seconds will come from the cache\r\n    }\r\n    getPokemonByName() {\r\n        (async () => {\r\n            const api = new PokemonClient();\r\n            await api\r\n                .getPokemonByName('luxray')\r\n                .then((data) => console.log(data.name)) // will output \"Luxray\"\r\n                .catch((error) => console.error(error));\r\n        })();\r\n    }\r\n}\r\nPokemonService.ɵfac = function PokemonService_Factory(t) { return new (t || PokemonService)(i0.ɵɵinject(i1.HttpClient)); };\r\nPokemonService.ɵprov = /*@__PURE__*/ i0.ɵɵdefineInjectable({ token: PokemonService, factory: PokemonService.ɵfac });\r\n"]},"metadata":{},"sourceType":"module"}