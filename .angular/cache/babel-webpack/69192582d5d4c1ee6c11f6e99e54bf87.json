{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ItemClient = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst endpoints_1 = require(\"../constants/endpoints\");\n\nconst base_1 = require(\"../structures/base\");\n/**\n * ### Item Client\n *\n * Client used to access the Item Endpoints:\n *  - [Item](https://pokeapi.co/docs/v2#item)\n *  - [Item Attributes](https://pokeapi.co/docs/v2#item-attributes)\n *  - [Item Categories](https://pokeapi.co/docs/v2#item-categories)\n *  - [Item Filing Effects](https://pokeapi.co/docs/v2#item-fling-effects)\n *  - [Item Pockets](https://pokeapi.co/docs/v2#item-pockets)\n * ---\n * See [PokÃ©API Documentation](https://pokeapi.co/docs/v2#items-section)\n */\n\n\nclass ItemClient extends base_1.BaseClient {\n  /**\n   * @argument clientOptions Options for the client.\n   */\n  constructor(clientOptions) {\n    super(clientOptions);\n  }\n  /**\n   * Get an Item by it's name\n   * @param name The item name\n   * @returns An Item\n   */\n\n\n  getItemByName(name) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        this.api.get(`${endpoints_1.Endpoints.Item}/${name}`).then(response => resolve(response.data)).catch(error => reject(error));\n      });\n    });\n  }\n  /**\n   * Get an Item by it's ID\n   * @param id The item ID\n   * @returns An Item\n   */\n\n\n  getItemById(id) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        this.api.get(`${endpoints_1.Endpoints.Item}/${id}`).then(response => resolve(response.data)).catch(error => reject(error));\n      });\n    });\n  }\n  /**\n   * Get an Item Attribute by it's name\n   * @param name The item attribute name\n   * @returns An Item Attribute\n   */\n\n\n  getItemAttributeByName(name) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        this.api.get(`${endpoints_1.Endpoints.ItemAttribute}/${name}`).then(response => resolve(response.data)).catch(error => reject(error));\n      });\n    });\n  }\n  /**\n   * Get an Item Attribute by it's ID\n   * @param id The item attribute ID\n   * @returns An Item Attribute\n   */\n\n\n  getItemAttributeById(id) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        this.api.get(`${endpoints_1.Endpoints.ItemAttribute}/${id}`).then(response => resolve(response.data)).catch(error => reject(error));\n      });\n    });\n  }\n  /**\n   * Get an Item Category by it's name\n   * @param name The item category name\n   * @returns An Item Category\n   */\n\n\n  getItemCategoryByName(name) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        this.api.get(`${endpoints_1.Endpoints.ItemCategory}/${name}`).then(response => resolve(response.data)).catch(error => reject(error));\n      });\n    });\n  }\n  /**\n   * Get an Item Category by it's ID\n   * @param id The item category ID\n   * @returns An Item Category\n   */\n\n\n  getItemCategoryById(id) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        this.api.get(`${endpoints_1.Endpoints.ItemCategory}/${id}`).then(response => resolve(response.data)).catch(error => reject(error));\n      });\n    });\n  }\n  /**\n   * Get an Item Filing Effect by it's name\n   * @param name The item filing effect name\n   * @returns An Item Filing Effect\n   */\n\n\n  getItemFlingEffectByName(name) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        this.api.get(`${endpoints_1.Endpoints.ItemFlingEffect}/${name}`).then(response => resolve(response.data)).catch(error => reject(error));\n      });\n    });\n  }\n  /**\n   * Get an Item Filing Effect by it's ID\n   * @param id The item filing effect ID\n   * @returns An Item Filing Effect\n   */\n\n\n  getItemFlingEffectById(id) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        this.api.get(`${endpoints_1.Endpoints.ItemFlingEffect}/${id}`).then(response => resolve(response.data)).catch(error => reject(error));\n      });\n    });\n  }\n  /**\n   * Get an Item Pocket by it's name\n   * @param name The item pocket name\n   * @returns An Item Pocket\n   */\n\n\n  getItemPocketByName(name) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        this.api.get(`${endpoints_1.Endpoints.ItemPocket}/${name}`).then(response => resolve(response.data)).catch(error => reject(error));\n      });\n    });\n  }\n  /**\n   * Get an Item Pocket by it's ID\n   * @param id The item pocket ID\n   * @returns An Item Pocket\n   */\n\n\n  getItemPocketById(id) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        this.api.get(`${endpoints_1.Endpoints.ItemPocket}/${id}`).then(response => resolve(response.data)).catch(error => reject(error));\n      });\n    });\n  }\n  /**\n   * List Items\n   * @param offset The first item that you will get\n   * @param limit How many Items per page\n   * @returns A list of Items\n   */\n\n\n  listItems(offset, limit) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        this.api.get(`${endpoints_1.Endpoints.Item}?offset=${offset || 0}&limit=${limit || 20}`).then(response => resolve(response.data)).catch(error => reject(error));\n      });\n    });\n  }\n  /**\n   * List Item Attributes\n   * @param offset The first item that you will get\n   * @param limit How many Item Attributes per page\n   * @returns A list of Item Attributes\n   */\n\n\n  listItemAttributes(offset, limit) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        this.api.get(`${endpoints_1.Endpoints.ItemAttribute}?offset=${offset || 0}&limit=${limit || 20}`).then(response => resolve(response.data)).catch(error => reject(error));\n      });\n    });\n  }\n  /**\n   * List Item Categories\n   * @param offset The first item that you will get\n   * @param limit How many Item Categories per page\n   * @returns A list of Item Categories\n   */\n\n\n  listItemCategories(offset, limit) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        this.api.get(`${endpoints_1.Endpoints.ItemCategory}?offset=${offset || 0}&limit=${limit || 20}`).then(response => resolve(response.data)).catch(error => reject(error));\n      });\n    });\n  }\n  /**\n   * List Item Filing Effects\n   * @param offset The first item that you will get\n   * @param limit How many Item Filing Effects per page\n   * @returns A list of Item Filing Effects\n   */\n\n\n  listItemFilingEffects(offset, limit) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        this.api.get(`${endpoints_1.Endpoints.ItemFlingEffect}?offset=${offset || 0}&limit=${limit || 20}`).then(response => resolve(response.data)).catch(error => reject(error));\n      });\n    });\n  }\n  /**\n   * List Item Pockets\n   * @param offset The first item that you will get\n   * @param limit How many Item Pockets per page\n   * @returns A list of Item Pockets\n   */\n\n\n  listItemPockets(offset, limit) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        this.api.get(`${endpoints_1.Endpoints.ItemPocket}?offset=${offset || 0}&limit=${limit || 20}`).then(response => resolve(response.data)).catch(error => reject(error));\n      });\n    });\n  }\n\n}\n\nexports.ItemClient = ItemClient;","map":null,"metadata":{},"sourceType":"script"}