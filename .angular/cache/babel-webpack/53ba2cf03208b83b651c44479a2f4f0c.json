{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.GameClient = void 0;\n\nconst tslib_1 = require(\"tslib\");\n\nconst constants_1 = require(\"../constants\");\n\nconst base_1 = require(\"../structures/base\");\n/**\n * ### Game Client\n *\n * Client used to access the Game Endpoints:\n *  - [Generations](https://pokeapi.co/docs/v2#generations)\n *  - [Pokedexes](https://pokeapi.co/docs/v2#pokedexes)\n *  - [Versions](https://pokeapi.co/docs/v2#version)\n *  - [Version Groups](https://pokeapi.co/docs/v2#version-groups)\n * ---\n * See [PokÃ©API Documentation](https://pokeapi.co/docs/v2#games-section)\n */\n\n\nclass GameClient extends base_1.BaseClient {\n  /**\n   * @argument clientOptions Options for the client.\n   */\n  constructor(clientOptions) {\n    super(clientOptions);\n  }\n  /**\n   * Get a Generation by it's name\n   * @param name The generation name\n   * @returns A Generation\n   */\n\n\n  getGenerationByName(name) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        this.api.get(`${constants_1.Endpoints.Generation}/${name}`).then(response => resolve(response.data)).catch(error => reject(error));\n      });\n    });\n  }\n  /**\n   * Get a Generation by it's ID\n   * @param id The generation ID\n   * @returns A Generation\n   */\n\n\n  getGenerationById(id) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        this.api.get(`${constants_1.Endpoints.Generation}/${id}`).then(response => resolve(response.data)).catch(error => reject(error));\n      });\n    });\n  }\n  /**\n   * Get a Pokedex by it's name\n   * @param name The pokedex name\n   * @returns A Pokedex\n   */\n\n\n  getPokedexByName(name) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        this.api.get(`${constants_1.Endpoints.Pokedex}/${name}`).then(response => resolve(response.data)).catch(error => reject(error));\n      });\n    });\n  }\n  /**\n   * Get a Pokedex by it's ID\n   * @param id The pokedex ID\n   * @returns A Pokedex\n   */\n\n\n  getPokedexById(id) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        this.api.get(`${constants_1.Endpoints.Pokedex}/${id}`).then(response => resolve(response.data)).catch(error => reject(error));\n      });\n    });\n  }\n  /**\n   * Get a Version by it's name\n   * @param name The version name\n   * @returns A Version\n   */\n\n\n  getVersionByName(name) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        this.api.get(`${constants_1.Endpoints.Version}/${name}`).then(response => resolve(response.data)).catch(error => reject(error));\n      });\n    });\n  }\n  /**\n   * Get a Version by it's ID\n   * @param id The version ID\n   * @returns A Version\n   */\n\n\n  getVersionById(id) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        this.api.get(`${constants_1.Endpoints.Version}/${id}`).then(response => resolve(response.data)).catch(error => reject(error));\n      });\n    });\n  }\n  /**\n   * Get a Version Group by it's name\n   * @param name The version group name\n   * @returns A Version Group\n   */\n\n\n  getVersionGroupByName(name) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        this.api.get(`${constants_1.Endpoints.VersionGroup}/${name}`).then(response => resolve(response.data)).catch(error => reject(error));\n      });\n    });\n  }\n  /**\n   * Get a Version Group by it's ID\n   * @param id The version group ID\n   * @returns A Version Group\n   */\n\n\n  getVersionGroupById(id) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        this.api.get(`${constants_1.Endpoints.VersionGroup}/${id}`).then(response => resolve(response.data)).catch(error => reject(error));\n      });\n    });\n  }\n  /**\n   * List Generations\n   * @param offset The first item that you will get\n   * @param limit How many Generations per page\n   * @returns A list of Generations\n   */\n\n\n  listGenerations(offset, limit) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        this.api.get(`${constants_1.Endpoints.Generation}?offset=${offset || 0}&limit=${limit || 20}`).then(response => resolve(response.data)).catch(error => reject(error));\n      });\n    });\n  }\n  /**\n   * List Pokedexes\n   * @param offset The first item that you will get\n   * @param limit How many Pokedexes per page\n   * @returns A list of Pokedexes\n   */\n\n\n  listPokedexes(offset, limit) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        this.api.get(`${constants_1.Endpoints.Pokedex}?offset=${offset || 0}&limit=${limit || 20}`).then(response => resolve(response.data)).catch(error => reject(error));\n      });\n    });\n  }\n  /**\n   * List Versions\n   * @param offset The first item that you will get\n   * @param limit How many Versions per page\n   * @returns A list of Versions\n   */\n\n\n  listVersions(offset, limit) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        this.api.get(`${constants_1.Endpoints.Version}?offset=${offset || 0}&limit=${limit || 20}`).then(response => resolve(response.data)).catch(error => reject(error));\n      });\n    });\n  }\n  /**\n   * List Version Groups\n   * @param offset The first item that you will get\n   * @param limit How many Version Groups per page\n   * @returns A list of Version Groups\n   */\n\n\n  listVersionGroups(offset, limit) {\n    return (0, tslib_1.__awaiter)(this, void 0, void 0, function* () {\n      return new Promise((resolve, reject) => {\n        this.api.get(`${constants_1.Endpoints.VersionGroup}?offset=${offset || 0}&limit=${limit || 20}`).then(response => resolve(response.data)).catch(error => reject(error));\n      });\n    });\n  }\n\n}\n\nexports.GameClient = GameClient;","map":null,"metadata":{},"sourceType":"script"}